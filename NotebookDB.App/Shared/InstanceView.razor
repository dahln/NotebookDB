@using Newtonsoft.Json
@using NotebookDB.Common.Enumerations

@inject NavigationManager _navigationManger
@inject NotebookDB.App.Services.API API
@inject IToastService _toastService
@inject IModalService _modalService

@if (Instance != null && Type != null)
{
    <form @onsubmit="SaveInstance">
        <div class="row d-print-none">
            <div class="col-lg-12 pe-3">
                @if (Instance.AllowEdits == true)
                {
                    
                    @if (InstanceId != null && IsLocked == false)
                    {
                        <div class="btn btn-danger float-end me-3" @onclick="DeleteInstance"><i class="fas fa-trash-alt me-2"></i>Delete</div>
                        <div class="btn btn-success float-end me-2" @onclick="CancelInstanceChanges"><i class="fas fa-trash-alt me-2"></i>Cancel Changes</div>
                    }
                    if(IsLocked == false)
                    {
                        <button class="btn btn-primary float-end me-2" type="submit"><i class="fas fa-check me-2"></i>Save</button>
                    }
                    @if (InstanceId != null && IsLocked == true)
                    {
                        <div class="btn btn-warning float-end me-3" @onclick="EditInstance"><i class="fa-solid fa-pen me-2"></i>Edit</div>
                    }   
                    
                }
            </div>
        </div>
        <fieldset class="row" disabled="@(Instance.AllowEdits == false || IsLocked == true)">
            <div class="col-lg-12">
                <div class="row">
                    <div class="col-lg-12">

                        @if (Type.Fields.Any() == false || Type.Fields.Any() == true)
                        {
                            @foreach(var section in Type.Sections.OrderBy(x => x.Order))
                            {
                                <fieldset class="@(!PreviewView ? "reset" : string.Empty)">
                                    @if(!PreviewView) { <legend class="reset section-label">@(section.Name) Section</legend> }
                                    <table class="table">
                                        <tbody>
                                            <tr>
                                                @for(int column = 1; column <= section.Columns; column++)
                                                {
                                                    <td>
                                                        <fieldset class="@(!PreviewView ? "reset" : string.Empty)">
                                                        @if(!PreviewView) { <legend class="@(!PreviewView ? "reset" : string.Empty)">Column - @column</legend> }
                                                        
                                                        @foreach (var value in Instance.Values.Where(f => f.Field.SectionId == section.Id && f.Field.Column == column).OrderBy(x => x.Field.Order))
                                                        {
                                                            @if (value.Field.Type == FieldType.Text)
                                                            {
                                                                <div class="form-group mb-2">
                                                                    <label for="@value.Field.Id">
                                                                        @value.Field.Name @if (value.Field.Required)
                                                                        {
                                                                            <span class="required-astrisk">*</span>
                                                                        }
                                                                    </label>
                                                                    <input id="@value.Field.Id" type="text" class="form-control" @bind="value.Value" />
                                                                </div>
                                                            }

                                                            else if (value.Field.Type == FieldType.TextArea)
                                                            {
                                                                <div class="form-group mb-2">
                                                                    <label for="@value.Field.Id">
                                                                        @value.Field.Name @if (value.Field.Required)
                                                                        {
                                                                            <span class="required-astrisk">*</span>
                                                                        }
                                                                    </label>
                                                                    <textarea rows="@(!string.IsNullOrEmpty(value.Field.Options) ? value.Field.Options : (5).ToString())" id="@value.Field.Id" class="form-control d-print-none" @bind="value.Value"></textarea>
                                                                    <pre for="@value.Field.Id" class="d-none d-print-block textarea-print">
                                                                        <span>@value.Value</span>
                                                                    </pre>
                                                                </div>
                                                            }
                                                            else if (value.Field.Type == FieldType.Number)
                                                            {
                                                                <div class="form-group mb-2">
                                                                    <label for="@value.Field.Id">
                                                                        @value.Field.Name @if (value.Field.Required)
                                                                        {
                                                                            <span class="required-astrisk">*</span>
                                                                        }
                                                                    </label>
                                                                    <input id="@value.Field.Id" type="number" class="form-control" @bind="value.Value" />
                                                                </div>
                                                            }
                                                            else if (value.Field.Type == FieldType.Date)
                                                            {
                                                                <div class="form-group mb-2">
                                                                    <label for="@value.Field.Id">
                                                                        @value.Field.Name @if (value.Field.Required)
                                                                        {
                                                                            <span class="required-astrisk">*</span>
                                                                        }
                                                                    </label>
                                                                    <div id="@value.Field.Id">
                                                                        <DateAsString @bind-Value="value.Value"></DateAsString>
                                                                    </div>
                                                                </div>
                                                            }
                                                            else if (value.Field.Type == FieldType.List)
                                                            {
                                                                <div class="form-group mb-2">
                                                                    <label for="@value.Field.Id">
                                                                        @value.Field.Name @if (value.Field.Required)
                                                                        {
                                                                            <span class="required-astrisk">*</span>
                                                                        }
                                                                    </label>
                                                                    <select class="form-select" @bind="value.Value">
                                                                        <option value=""></option>
                                                                        @foreach (var option in value.Field.Options.Split(','))
                                                                        {
                                                                            <option value="@option">@option</option>
                                                                        }
                                                                    </select>
                                                                </div>
                                                            }
                                                            else if (value.Field.Type == FieldType.Label)
                                                            {
                                                                <div class="form-group mb-2">
                                                                    <pre for="@value.Field.Id">
                                                                        @if (!string.IsNullOrEmpty(value.Field.Options))
                                                                        {
                                                                        <span>@value.Field.Options</span>
                                                                        }
                                                                    </pre>
                                                                </div>
                                                            }
                                                            else if (value.Field.Type == FieldType.Image)
                                                            {
                                                                <div class="form-group mb-2">
                                                                    <label for="@value.Field.Id">
                                                                        @value.Field.Name @if (value.Field.Required)
                                                                        {
                                                                            <span class="required-astrisk">*</span>
                                                                        }
                                                                    </label>
                                                                    <ImageInForm @bind-ImageBase64="@value.Value" Editing="!IsLocked" />
                                                                </div>
                                                            }
                                                            else if (value.Field.Type == FieldType.URL)
                                                            {
                                                                <div class="form-group mb-2">
                                                                    <label for="@value.Field.Id">
                                                                        @value.Field.Name @if (value.Field.Required)
                                                                        {
                                                                            <span class="required-astrisk">*</span>
                                                                        }
                                                                    </label>
                                                                    @if(IsLocked)
                                                                    {
                                                                        <br />
                                                                        <a href="@value.Value" target="_blank">@value.Value</a>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="input-group">
                                                                            <input id="@value.Field.Id" type="text" class="form-control" @bind="value.Value" />
                                                                            <a href="@value.Value" class="btn btn-outline-secondary" target="_blank">Open <i class="fa-solid fa-caret-right ms-2"></i></a>
                                                                        </div>
                                                                    }
                                                                </div>
                                                            }
                                                            else if (value.Field.Type == FieldType.Money)
                                                            {
                                                                <div class="form-group mb-2">
                                                                    <label for="@value.Field.Id">
                                                                        @value.Field.Name @if (value.Field.Required)
                                                                        {
                                                                            <span class="required-astrisk">*</span>
                                                                        }
                                                                    </label>
                                                                    <div class="input-group">
                                                                        <span class="input-group-text">$</span>
                                                                        <input id="@value.Field.Id" type="number" class="form-control" @bind="value.Value" step="0.01" />
                                                                    </div>
                                                                </div>
                                                            }
                                                            else if (value.Field.Type == FieldType.Decimal)
                                                            {
                                                                <div class="form-group mb-2">
                                                                    <label for="@value.Field.Id">
                                                                        @value.Field.Name @if (value.Field.Required)
                                                                        {
                                                                            <span class="required-astrisk">*</span>
                                                                        }
                                                                    </label>
                                                                    <div class="input-group">
                                                                        <input id="@value.Field.Id" type="number" class="form-control" @bind="value.Value" step="0.001" />
                                                                    </div>
                                                                </div>
                                                            }
                                                        }
                                                        </fieldset>
                                                    </td>
                                                }
                                            </tr>
                                        </tbody>
                                    </table>
                                </fieldset>
                            }
                        }
                    </div>
                </div>
            </div>
        </fieldset>
        

    </form>
}

@code {
    [Parameter]
    public string NotebookId { get; set; }

    [Parameter]
    public string InstanceId { get; set; }

    [Parameter]
    public Common.Notebook Type { get; set; }

    [Parameter]
    public Common.Instance Instance { get; set; }

    [Parameter]
    public EventCallback<Common.Instance> InstanceChanged { get; set; }

    [Parameter]
    public bool PreviewView { get; set; }

    [Parameter]
    public bool Designer { get; set; }

    public bool IsLocked { get; set; }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
        if(InstanceId == null)
            IsLocked = false;
        else 
            IsLocked = true;

        if(Designer)
            IsLocked = false;
    }

    async private Task SaveInstance()
    {
        bool error = false;
        foreach (var value in Instance.Values)
        {
            if (value.Field.Required)
            {
                if (string.IsNullOrEmpty(value.Value))
                {
                    _toastService.ShowError($"{value.Field.Name} is required");
                    error = true;
                }
            }
        }

        if (error)
            return;

        
        if (InstanceId == null)
        {
            Instance.NotebookId = NotebookId;
            var response = await API.PostAsync<Common.Instance>($"api/v1/notebook/{NotebookId}/instance", Instance);
            InstanceId = response.Id;
            Instance = await API.GetAsync<Common.Instance>($"api/v1/notebook/{NotebookId}/instance/{InstanceId}");
            _navigationManger.NavigateTo($"/notebook/{NotebookId}/instance/{InstanceId}");
        }
        else if (InstanceId != null)
        {
            Instance = await API.PutAsync<Common.Instance>($"api/v1/notebook/{NotebookId}/instance/{InstanceId}", Instance);
            IsLocked = true;
        }

        await InstanceChanged.InvokeAsync(Instance);

        _toastService.ShowSuccess("Saved");

    }

    async private Task DeleteInstance()
    {
        var modal = _modalService.Show<ConfirmDialog>("Are you sure you want to delete this?");
        var modalResult = await modal.Result;

        if (modalResult.Cancelled) { }
        else
        {
            await API.DeleteAsync($"api/v1/notebook/{NotebookId}/instance/{InstanceId}");
            _navigationManger.NavigateTo($"notebook/{NotebookId}");
        }
    }


    private void EditInstance()
    {
        IsLocked = false;
    }

    async private Task CancelInstanceChanges()
    {
        Instance = await API.GetAsync<Common.Instance>($"api/v1/notebook/{NotebookId}/instance/{InstanceId}");
        IsLocked = true;
    }
}
